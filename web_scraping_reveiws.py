# -*- coding: utf-8 -*-
"""Web_scraping_reveiws.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/tharunsinga/2645dd0f75f68e527093540af63ad0a9/web_scraping_reveiws.ipynb
"""

#Importing required libraries
import requests   
from bs4 import BeautifulSoup as bs 
import re 
import nltk
import matplotlib.pyplot as plt
from wordcloud import WordCloud

from google.colab import files 
uploaded=files.upload()# importing files into google colab

#Scraping review using beautifulsoup
product_reviews=[]
for i in range(1,30):
  product=[]  
  url="https://www.flipkart.com/yonex-gr-303-f-multicolor-strung-badminton-racquet/product-reviews/itm99dc329c05343?pid=RAQEET35NDAZZWUB&lid=LSTRAQEET35NDAZZWUBC7E9HQ&marketplace=FLIPKART"+str(i)
  response = requests.get(url)
  soup = bs(response.content,"html.parser")# creating soup object to iterate over the extracted content 
  reviews = soup.findAll("div",attrs={"class","qwjRop"})# Extracting the content under specific tags  
  for i in range(len(reviews)):
    product.append(reviews[i].text)  
  product_reviews=product_reviews+product
#here we saving the extracted data 
with open("product.txt","w",encoding='utf8') as output:
    output.write(str(product_reviews))

# Joining all the reviews into single paragraph 
product_rev_string = " ".join(product_reviews) 

# Removing unwanted symbols incase if exists
product_rev_string = re.sub("[^A-Za-z" "]+"," ",product_rev_string).lower()
product_rev_string = re.sub("[0-9" "]+"," ",product_rev_string)   

#here we are splitting the words as individual string
product_reviews_words = product_rev_string.split(" ")

stop_words=["i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your", "yours", "yourself", "yourselves", "he", "him", "his", "himself", "she", "her", "hers", "herself", "it", "its", "itself", "they", "them", "their", "theirs", "themselves", "what", "which", "who", "whom", "this", "that", "these", "those", "am", "is", "are", "was", "were", "be", "been", "being", "have", "has", "had", "having", "do", "does", "did", "doing", "a", "an", "the", "and", "but", "if", "or", "because", "as", "until", "while", "of", "at", "by", "for", "with", "about", "against", "between", "into", "through", "during", "before", "after", "above", "below", "to", "from", "up", "down", "in", "out", "on", "off", "over", "under", "again", "further", "then", "once", "here", "there", "when", "where", "why", "how", "all", "any", "both", "each", "few", "more", "most", "other", "some", "such", "no", "nor", "not", "only", "own", "same", "so", "than", "too", "very", "s", "t", "can", "will", "just", "don", "should", "now"]

product_reviews_words = [w for w in product_reviews_words if not w in stop_words]
product_rev_string = " ".join(product_reviews_words)
#creating word cloud for all words
wordcloud_product = WordCloud(
                      background_color='black',
                      width=1800,
                      height=1400
                     ).generate(product_rev_string)
plt.imshow(wordcloud_product)

with open("positive_words.txt","r") as pos:
  poswords = pos.read().split("\n")  
  poswords = poswords[36:]

product_pos_in_pos = " ".join ([w for w in product_reviews_words if w in poswords])
wordcloud_pos_in_pos = WordCloud(
                      background_color='black',
                      width=1800,
                      height=1400
                     ).generate(product_pos_in_pos)
plt.imshow(wordcloud_pos_in_pos)

with open("negative_words.txt","r",encoding = "ISO-8859-1") as neg:
  negwords = neg.read().split("\n")
  negwords = negwords[37:]

# negative word cloud
# Choosing the only words which are present in negwords
product_neg_in_neg = " ".join ([w for w in product_reviews_words if w in negwords])

wordcloud_neg_in_neg = WordCloud(
                      background_color='black',
                      width=1800,
                      height=1400
                     ).generate(product_neg_in_neg)
plt.imshow(wordcloud_neg_in_neg)

